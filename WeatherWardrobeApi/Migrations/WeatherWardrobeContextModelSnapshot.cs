// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeatherWardrobeApi.Data;

#nullable disable

namespace WeatherWardrobeApi.Migrations
{
    [DbContext(typeof(WeatherWardrobeContext))]
    partial class WeatherWardrobeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClothingItemWeatherCondition", b =>
                {
                    b.Property<int>("ClothingItemsClothingItemId")
                        .HasColumnType("integer");

                    b.Property<int>("WeatherConditionsWeatherConditionId")
                        .HasColumnType("integer");

                    b.HasKey("ClothingItemsClothingItemId", "WeatherConditionsWeatherConditionId");

                    b.HasIndex("WeatherConditionsWeatherConditionId");

                    b.ToTable("ClothingItemWeatherCondition", (string)null);
                });

            modelBuilder.Entity("WeatherWardrobeApi.Models.ClothingItem", b =>
                {
                    b.Property<int>("ClothingItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClothingItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClothingItemId");

                    b.ToTable("ClothingItems");
                });

            modelBuilder.Entity("WeatherWardrobeApi.Models.WeatherCondition", b =>
                {
                    b.Property<int>("WeatherConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WeatherConditionId"));

                    b.Property<string>("ConditionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Temperature")
                        .HasColumnType("double precision");

                    b.Property<string>("TemperatureRange")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WeatherConditionId");

                    b.ToTable("WeatherConditions");

                    b.HasData(
                        new
                        {
                            WeatherConditionId = 1,
                            ConditionName = "Freezing",
                            Temperature = 0.0,
                            TemperatureRange = "-20-0"
                        },
                        new
                        {
                            WeatherConditionId = 2,
                            ConditionName = "Cold",
                            Temperature = 0.0,
                            TemperatureRange = "0-10"
                        },
                        new
                        {
                            WeatherConditionId = 3,
                            ConditionName = "Cool",
                            Temperature = 0.0,
                            TemperatureRange = "10-15"
                        },
                        new
                        {
                            WeatherConditionId = 4,
                            ConditionName = "Mild",
                            Temperature = 0.0,
                            TemperatureRange = "15-20"
                        },
                        new
                        {
                            WeatherConditionId = 5,
                            ConditionName = "Warm",
                            Temperature = 0.0,
                            TemperatureRange = "20-25"
                        },
                        new
                        {
                            WeatherConditionId = 6,
                            ConditionName = "Hot",
                            Temperature = 0.0,
                            TemperatureRange = "25-30"
                        },
                        new
                        {
                            WeatherConditionId = 7,
                            ConditionName = "Scorching",
                            Temperature = 0.0,
                            TemperatureRange = "30-45"
                        });
                });

            modelBuilder.Entity("ClothingItemWeatherCondition", b =>
                {
                    b.HasOne("WeatherWardrobeApi.Models.ClothingItem", null)
                        .WithMany()
                        .HasForeignKey("ClothingItemsClothingItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherWardrobeApi.Models.WeatherCondition", null)
                        .WithMany()
                        .HasForeignKey("WeatherConditionsWeatherConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
